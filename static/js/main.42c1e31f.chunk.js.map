{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","handleRemove","removeTodo","id","toggleForm","setState","isEditing","state","handleUpdate","e","preventDefault","updateTodo","task","handleChange","target","name","value","handleToggle","toggleTodo","this","className","onSubmit","type","onChange","completed","onClick","icon","faPen","faTrash","Component","NewTodoForm","hadleSubmit","createTodo","uuidv4","htmlFor","placeholder","TodoList","create","newTodo","todos","remove","filter","todo","update","updatedTask","newTodos","map","toggleCompletion","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42c1e31f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isEditing: false, task: this.props.task };\n  }\n  handleRemove = () => {\n    this.props.removeTodo(this.props.id);\n  };\n  toggleForm = () => {\n    this.setState({ isEditing: !this.state.isEditing });\n  };\n  handleUpdate = (e) => {\n    e.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({ isEditing: !this.state.isEditing, task: \"\" });\n  };\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleToggle = () => {\n    this.props.toggleTodo(this.props.id);\n  };\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <div className=\"Todo\">\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\n            <input\n              type=\"text\"\n              value={this.state.task}\n              name=\"task\"\n              onChange={this.handleChange}\n            />\n            <button>保存</button>\n          </form>\n        </div>\n      );\n    } else {\n      result = (\n        <div className=\"Todo\">\n          <li\n            className={\n              this.props.completed ? \"Todo-task completed\" : \"Todo-task\"\n            }\n            onClick={this.handleToggle}\n          >\n            {this.props.task}\n          </li>\n          <div className=\"Todo-buttons\">\n            <button onClick={this.toggleForm}>\n              <FontAwesomeIcon icon={faPen} />\n            </button>\n            <button onClick={this.handleRemove}>\n              <FontAwesomeIcon icon={faTrash} />\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./NewTodoForm.css\";\n\nexport default class NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { task: \"\" };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  hadleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createTodo({ ...this.state, id: uuidv4(), completed: false });\n    this.setState({ task: \"\" });\n  };\n  render() {\n    return (\n      <form className=\"NewTodoForm\" onSubmit={this.hadleSubmit}>\n        <label htmlFor=\"task\">項目</label>\n        <input\n          id=\"task\"\n          placeholder=\"新規\"\n          type=\"text\"\n          value={this.state.task}\n          name=\"task\"\n          onChange={this.handleChange}\n        ></input>\n        <button>追加</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport \"./TodoList.css\";\n\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n    };\n  }\n\n  create = (newTodo) => {\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  };\n\n  remove = (id) => {\n    this.setState({ todos: this.state.todos.filter((todo) => todo.id !== id) });\n  };\n\n  update = (id, updatedTask) => {\n    const newTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      }\n      return todo;\n    });\n    this.setState({ todos: newTodos });\n  };\n\n  toggleCompletion = (id) => {\n    const newTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    this.setState({ todos: newTodos });\n  };\n  render() {\n    const todos = this.state.todos.map((todo) => (\n      <Todo\n        key={todo.id}\n        task={todo.task}\n        removeTodo={this.remove}\n        id={todo.id}\n        updateTodo={this.update}\n        completed={todo.completed}\n        toggleTodo={this.toggleCompletion}\n      />\n    ));\n    return (\n      <div className=\"TodoList\">\n        <h1>Todo List</h1>\n        <span>シンプルリストアプリ</span>\n        <ul>{todos}</ul>\n        <NewTodoForm createTodo={this.create} />\n      </div>\n    );\n  }\n}\n","import TodoList from \"./TodoList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}